[
  {
    "name": "Product Clicked",
    "description": "Customer clicked on a product.",
    "id": "product-clicked",
    "properties": {
      "id": "string",
      "name": "string",
      "sku": "string",
      "category": "string",
      "brand": "string",
      "variant": {
        "name": "string",
        "color": "string",
        "size": "string"
      },
      "price": 10.15,
      "quantity": 2,
      "position": 1,
      "url": {
        "image": "url",
        "page": "url"
      }
    },
    "copy": {
      "data.ec.product.id":       "properties.id",
      "data.ec.product.name":     "properties.name",
      "data.ec.product.sku":      "properties.sku",
      "data.ec.product.category": "properties.category",
      "data.ec.product.brand":    "properties.brand",
      "data.ec.product.variant":  "properties.variant",
      "data.ec.product.price":    "properties.price",
      "data.ec.product.quantity": "properties.quantity",
      "data.ec.product.position": "properties.position"
    },
    "tags": ["activity:browsing", "event:behavioral"],
    "state": "awareness"
  },
  {
    "name": "Product Details Page View",
    "description": "Customer viewed a product details page.",
    "id": "product-details-page-view",
    "properties": {
      "id": "string",
      "name": "string",
      "sku": "string",
      "category": "string",
      "brand": "string",
      "variant": {
        "name": "string",
        "color": "string",
        "size": "string"
      },
      "price": 0,
      "url": {
        "image": "url",
        "page": "url"
      }
    },
    "copy": {
      "data.ec.product.id":        "properties.id",
      "data.ec.product.name":      "properties.name",
      "data.ec.product.sku":       "properties.sku",
      "data.ec.product.category":  "properties.category",
      "data.ec.product.brand":     "properties.brand",
      "data.ec.product.variant":   "properties.variant",
      "data.ec.product.price":     "properties.price"
    },
    "tags": ["activity:browsing", "event:behavioral"],
    "state": "awareness"
  },
  {
    "name": "Basket Viewed",
    "description": "Customer viewed their shopping cart",
    "explain": "This event should be used when a customer has viewed their shopping cart. An example usage would be when a user logs into their account and clicks on the shopping cart icon to view the items in their cart.",
    "id": "basket-viewed",
    "properties": {
      "id": "string"
    },
    "tags": ["activity:browsing", "event:behavioral"],
    "state": "consideration"
  },
  {
    "name": "Product Added To Basket",
    "description": "Customer added a product to their shopping cart",
    "explain": "This event should be used when a customer adds a product to their shopping cart.",
    "id": "product-added-to-basket",
    "properties": {
      "id": "string",
      "name": "string",
      "sku": "string",
      "category": "string",
      "brand": "string",
      "variant": {
        "name": "string",
        "color": "string",
        "size": "string"
      },
      "price": 10.10,
      "quantity": 1,
      "url": {
        "image": "url",
        "page": "url"
      }
    },
    "copy": {
      "data.ec.product.id":       "properties.id",
      "data.ec.product.name":     "properties.name",
      "data.ec.product.sku":      "properties.sku",
      "data.ec.product.category": "properties.category",
      "data.ec.product.brand":    "properties.brand",
      "data.ec.product.variant":  "properties.variant",
      "data.ec.product.price":    "properties.price",
      "data.ec.product.quantity": "properties.quantity"
    },
    "tags": ["event:behavioral"],
    "state": "consideration"
  },
  {
    "name": "Product Removed From Basket",
    "description": "Customer removed a product from their shopping cart",
    "explain": "This event should be used when a customer removes a product from their shopping cart. Example Usage: A customer has added a pair of shoes to their shopping cart but decides to remove it before completing the purchase.",
    "id": "product-removed-from-basket",
    "properties": {
      "id": "string",
      "name": "string",
      "sku": "string",
      "category": "string",
      "brand": "string",
      "variant": {
        "name": "string",
        "color": "string",
        "size": "string"
      },
      "price": 10.10,
      "quantity": 1,
      "url": {
        "image": "url",
        "page": "url"
      }
    },
    "copy": {
      "data.ec.product.id":        "properties.id",
      "data.ec.product.name":      "properties.name",
      "data.ec.product.sku":       "properties.sku",
      "data.ec.product.category":  "properties.category",
      "data.ec.product.brand":     "properties.brand",
      "data.ec.product.variant":   "properties.variant",
      "data.ec.product.price":     "properties.price",
      "data.ec.product.quantity":  "properties.quantity"
    },
    "tags": ["event:behavioral"],
    "state": "consideration"
  },
  {
    "name": "Checkout Started",
    "description": "Customer initiated the checkout process.",
    "explain": "This event should be used when a customer initiates the checkout process. Example usage: User clicks on \"Checkout\" button in their shopping cart. User selects \"Checkout\" option after adding items to their cart. User manually navigates to the checkout page",
    "id": "checkout-started",
    "const": {
      "id": "[local.storage:set,__tr_checkout_id]",
      "status": "started"
    },
    "properties": {
      "id": "string",
      "order_id": "string",
      "currency": "string",
      "value": 0.0,
      "coupon": "string"
    },
    "copy": {
      "data.ec.order.id":          "properties.order_id",
      "data.ec.checkout.id":       "properties.id",
      "data.ec.checkout.status":   "properties.status",
      "data.ec.checkout.currency": "properties.currency",
      "data.ec.checkout.value":    "properties.value"
    },
    "profile": {
      "data.metrics.ltcosv": [
        "data.ec.checkout.value",
        "+"
      ],
      "data.metrics.ltcosc": [
        1,
        "increment"
      ]
    },
    "compute": {
      "run": "on-profile-change",
      "func": [
        [
          "data.metrics.ltcop",
          "call:tracardi.service.setup.events.computations.checkout,compute_ltcop"
        ]
      ]
    },
    "tags": [
      "event:behavioural"
    ],
    "state": "purchase"
  },
  {
    "name": "Checkout Completed",
    "description": "Customer completed the check-out process.",
    "explain": "This event should be used when a customer has completed the check-out process. An example usage would be when a user adds items to their cart, enters their payment and shipping information, and clicks \"Submit Order.\"",
    "id": "checkout-completed",
    "const": {
      "id": "[local.storage:read,__tr_checkout_id]",
      "status": "completed"
    },
    "properties": {
      "id": "string",
      "value": 0.0
    },
    "copy": {
      "data.ec.checkout.id":     "properties.id",
      "data.ec.checkout.status": "properties.status"
    },
    "profile": {
      "data.metrics.ltcocv": [
        "properties.value",
        "+"
      ],
      "data.metrics.ltcocc": [
        1,
        "increment"
      ]
    },
    "compute": {
      "run": "on-profile-change",
      "func": [
        [
          "data.metrics.ltcop",
          "call:tracardi.service.setup.events.computations.checkout,compute_ltcop"
        ]
      ]
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "name": "Checkout Status",
    "description": "Customer completed a checkout step. Status changed.",
    "explain": "This event should be used when a customer completes a checkout step and the status changes. An example usage of this event is when a customer has completed the payment process and the status of the checkout changes from \"pending\" to \" paid\".",
    "id": "checkout-status",
    "const": {
      "id": "[local.storage:read,__tr_checkout_id]"
    },
    "properties": {
      "id": "string",
      "status": "string"
    },
    "copy": {
      "data.ec.checkout.id":     "properties.id",
      "data.ec.checkout.status": "properties.status"
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "name": "Delivery Info Entered",
    "description": "Customer added delivery information",
    "explain": "This event should be used when the customer adds delivery information. Great example is the address.",
    "id": "delivery-info-entered",
    "properties": {
      "order_id": "string",
      "delivery": {
        "town": "string",
        "county": "string",
        "country": "string",
        "postcode": "string",
        "street": "string"
      }
    },
    "copy": {
      "data.ec.order.id":              "properties.id",
      "data.contact.address.town":     "properties.delivery.town",
      "data.contact.address.county":   "properties.delivery.county",
      "data.contact.address.country":  "properties.delivery.country",
      "data.contact.address.postcode": "properties.delivery.postcode",
      "data.contact.address.street":   "properties.delivery.street"
    },
    "profile": {
      "data.contact.address.town": [
        "data.contact.address.town",
        "equals"
      ],
      "data.contact.address.county": [
        "data.contact.address.county",
        "equals"
      ],
      "data.contact.address.country": [
        "data.contact.address.country",
        "equals"
      ],
      "data.contact.address.postcode": [
        "data.contact.address.postcode",
        "equals"
      ],
      "data.contact.address.street": [
        "data.contact.address.street",
        "equals"
      ]
    },
    "tags": [
      "event:behavioral"
    ],
    "state": "purchase"
  },
  {
    "name": "Payment Info Entered",
    "description": "Customer added payment information",
    "id": "payment-info-entered",
    "properties": {
      "order_id": "string",
      "method": "string",
      "credit_card": {
        "number": "string",
        "expires": "2023-01-01 00:00:00",
        "holder": "string",
        "cvv": ""
      }
    },
    "copy": {
      "data.ec.order.id":                  "properties.id",
      "data.payment.method":               "properties.method",
      "data.payment.credit_card.number":   "properties.credit_card.number",
      "data.payment.credit_card.expires":  "properties.credit_card.expires",
      "data.payment.credit_card.holder":   "properties.credit_card.holder"
    },
    "tags": [
      "event:behavioral"
    ],
    "state": "purchase"
  },
  {
    "name": "Order Started",
    "description": "Customer completed the order",
    "id": "order-started",
    "const": {
      "status": "started"
    },
    "properties": {
      "id": "string",
      "income": {
        "value": 0.0,
        "currency": "string",
        "due_date": "2023-01-01 00:00:00"
      },
      "cost": {
        "value": 0.0,
        "currency": "string",
        "due_date": "2023-01-01 00:00:00"
      },
      "affiliation": "string",
      "products": [
        {
          "id": "string",
          "name": "string",
          "sku": "string",
          "category": "string",
          "brand": "string",
          "variant": {
            "name": "string",
            "color": "string",
            "size": "string"
          },
          "price": 10.10,
          "quantity": 1,
          "url": {
            "image": "url",
            "page": "url"
          }
        }
      ]
    },
    "copy": {
      "data.ec.order.id":      "properties.id",
      "data.ec.order.status":  "properties.status",
      "data.ec.order.income.value":  "properties.income.value",
      "data.ec.order.income.currency":  "properties.income.currency",
      "data.ec.order.income.due_date":  "properties.income.due_date",
      "data.ec.order.cost.value":    "properties.cost.value",
      "data.ec.order.cost.currency":    "properties.cost.currency",
      "data.ec.order.cost.due_date":    "properties.cost.due_date"

    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "id": "order-completed",
    "name": "Order Completed",
    "description": "Customer completed the order",
    "const": {
      "status": "completed"
    },
    "properties": {
      "id": "string",
      "status": "string"
    },
    "copy": {
      "data.ec.order.id":     "properties.id",
      "data.ec.order.status": "properties.status"
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "id": "order-delivered",
    "name": "Order Delivered",
    "description": "Order delivered to customer",
    "const": {
      "status": "delivered"
    },
    "properties": {
      "id": "string",
      "status": "string"
    },
    "copy": {
      "data.ec.order.id":     "properties.id",
      "data.ec.order.status": "properties.status"
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "id": "order-status-change",
    "name": "Order Status Change",
    "description": "Order changed status",
    "properties": {
      "id": "string",
      "status": "string"
    },
    "copy": {
      "data.ec.order.id":      "properties.id",
      "data.ec.order.status":  "properties.string"
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  },
  {
    "name": "Product Shared",
    "description": "Customer shared a product.",
    "id": "product-shared",
    "properties": {
      "id": "string",
      "media": "string"
    },
    "copy": {
      "data.ec.product.id":      "properties.id",
      "data.marketing.channel":  "properties.media"
    },
    "tags": [
      "event:behavioral"
    ],
    "state": "advocacy"
  },
  {
    "name": "Product Reviewed",
    "description": "Customer reviewed a product.",
    "id": "product-reviewed",
    "properties": {
      "id": "string",
      "review": "string",
      "rate": 0
    },
    "copy": {
      "data.ec.product.id":     "properties.id",
      "data.ec.product.review": "properties.review",
      "data.ec.product.rate":   "properties.rate"
    },
    "tags": [
      "event:behavioral"
    ],
    "state": "retention"
  },
  {
    "name": "Product Returned",
    "description": "Customer returned a product.",
    "id": "product-returned",
    "properties": {
      "id": "string"
    },
    "copy": {
      "data.ec.product.id": "properties.id"
    },
    "tags": [
      "event:behavioral"
    ],
    "state": "retention"
  },
  {
    "id": "sale-completed",
    "name": "Sale Completed",
    "description": "The sale process is completed. Meaning customer can not return the product.",
    "const": {
      "status": "sold"
    },
    "properties": {
      "order_id": "string",
      "value": 0,
      "currency": "string",
      "due_date": "2023-01-01 00:00:00"
    },
    "copy": {
      "data.ec.order.id":              "properties.order_id",
      "data.ec.order.status":          "properties.status",
      "data.ec.order.income.value":    "properties.value",
      "data.ec.order.income.currency":    "properties.currency",
      "data.ec.order.income.due_date":    "properties.due_date"
    },
    "tags": [
      "event:operational"
    ],
    "state": "purchase"
  }
]
